import{_ as e,o,c as r,z as a,a as s,t as c,V as i}from"./chunks/framework.055571f3.js";const q=JSON.parse('{"title":"参数通信","description":"","frontmatter":{"title":"参数通信"},"headers":[],"relativePath":"ros/comm/paramcomm.md","filePath":"ros/comm/paramcomm.md","lastUpdated":1681998807000}'),n={name:"ros/comm/paramcomm.md"},m={id:"frontmatter-title",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{$frontmatter.title}}"'},"​",-1),d=i('<h2 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-label="Permalink to &quot;场景&quot;">​</a></h2><p>在机器人系统中不同的功能模块可能会使用到一些相同的数据，比如：</p><blockquote><p>导航实现时，会进行路径规划，路径规划主要包含， 全局路径规划和本地路径规划，所谓全局路径规划就是设计一个从出发点到目标点的大致路径，而本地路径规划，则是根据车辆当前路况生成实时的行进路径。两种路径规划实现，都会使用到车辆的尺寸数据——长度、宽度、高度等。那么这些通用数据在程序中应该如何存储、调用呢？</p></blockquote><p>上述场景中，就可以使用参数服务实现，在一个节点下保存车辆尺寸数据，其他节点可以访问该节点并操作这些数据。</p><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><p>参数服务是以共享的方式实现不同节点之间数据交互的一种通信模式。保存参数的节点称之为参数服务端，调用参数的节点称之为参数客户端。参数客户端与参数服务端的交互是基于请求响应的，且参数通信的实现本质上对服务通信的进一步封装。</p><h2 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h2><p>参数服务保存的数据类似于编程中“全局变量”的概念，可以在不同的节点之间共享数据。</p>',8);function _(t,p,h,f,u,b){return o(),r("div",null,[a("h1",m,[s(c(t.$frontmatter.title)+" ",1),l]),d])}const P=e(n,[["render",_]]);export{q as __pageData,P as default};
