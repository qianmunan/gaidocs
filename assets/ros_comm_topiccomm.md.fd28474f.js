import{_ as p,o as e,c as o,z as n,a as s,t as r,V as a}from"./chunks/framework.055571f3.js";const h=JSON.parse('{"title":"话题通信","description":"","frontmatter":{"title":"话题通信"},"headers":[],"relativePath":"ros/comm/topiccomm.md","filePath":"ros/comm/topiccomm.md","lastUpdated":1681998807000}'),c={name:"ros/comm/topiccomm.md"},t={id:"frontmatter-title",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{$frontmatter.title}}"'},"​",-1),i=a('<h2 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-label="Permalink to &quot;场景&quot;">​</a></h2><p>话题通信是ROS中使用频率最高的一种通信模式，话题通信是基于发布订阅模式的，也即：一个节点发布消息，另一个节点订阅该消息。话题通信的应用场景也极其广泛，比如如下场景：</p><blockquote><p>机器人在执行导航功能，使用的传感器是激光雷达，机器人会采集激光雷达感知到的信息并计算，然后生成运动控制信息驱动机器人底盘运动。<br> 在该场景中，就不止一次使用到了话题通信。</p></blockquote><ul><li>以激光雷达信息的采集处理为例，在ROS中有一个节点需要时时的发布当前雷达采集到的数据，导航模块中也有节点会订阅并解析雷达数据。</li><li>再以运动消息的发布为例，导航模块会综合多方面数据实时计算出运动控制信息并发布给底盘驱动模块，底盘驱动有一个节点订阅运动信息并将其转换成控制电机的脉冲信号。</li></ul><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><p>话题通信是一种以发布订阅的方式实现不同节点之间数据传输的通信模型。数据发布对象称为发布方，数据订阅对象称之为订阅方，发布方和订阅方通过话题相关联，发布方将消息发布在话题上，订阅方则从该话题订阅消息，消息的流向是单向的。</p><div align="center"><img src="https://gaidocs.oss-cn-hangzhou.aliyuncs.com/screenshot/ros2/topic1.gif"></div>',7),y=a(`<div align="center"><img src="https://gaidocs.oss-cn-hangzhou.aliyuncs.com/screenshot/ros2/topic2.gif"></div><h2 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h2><p>话题通信一般应用于不断更新的、少逻辑处理的数据传输场景。</p><h2 id="消息借口" tabindex="-1">消息借口 <a class="header-anchor" href="#消息借口" aria-label="Permalink to &quot;消息借口&quot;">​</a></h2><p>关于消息接口的使用有多种方式：</p><ul><li>在ROS2中通过std_msgs包封装了一些原生的数据类型,比如：String、Int8、Int16、Int32、Int64、Float32、Float64、Char、Bool、Empty.... 这些原生数据类型也可以作为话题通信的载体，不过这些数据一般只包含一个 data 字段，而std_msgs包中其他的接口文件也比较简单，结构的单一意味着功能上的局限性，当传输一些结构复杂的数据时，就显得力不从心了；</li><li>在ROS2中还预定义了许多标准话题消息接口，这在实际工作中有着广泛的应用，比如：sensor_msgs包中定义了许多关于传感器消息的接口（雷达、摄像头、点云......），geometry_msgs包中则定义了许多几何消息相关的接口（坐标点、坐标系、速度指令......）；</li><li>如果上述接口文件都不能满足我们的需求，那么就可以自定义接口消息；</li></ul><h2 id="两个案例" tabindex="-1">两个案例 <a class="header-anchor" href="#两个案例" aria-label="Permalink to &quot;两个案例&quot;">​</a></h2><h3 id="案例分析" tabindex="-1">案例分析 <a class="header-anchor" href="#案例分析" aria-label="Permalink to &quot;案例分析&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>这两个案例均使用 C++ 实现</p></div><p>在案例实现过程中，需要关注的要素有三个：</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">发布方；</span></span>
<span class="line"><span style="color:#E1E4E8;">订阅方；</span></span>
<span class="line"><span style="color:#E1E4E8;">消息载体。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>案例1和案例2的主要区别在于消息载体，前者可以使用原生的数据类型，后者需要自定义接口消息。</p><h3 id="流程简介" tabindex="-1">流程简介 <a class="header-anchor" href="#流程简介" aria-label="Permalink to &quot;流程简介&quot;">​</a></h3><p>案例2需要先自定义接口消息，除此之外的实现流程与案例1一致，主要步骤如下：</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">编写发布方实现；</span></span>
<span class="line"><span style="color:#E1E4E8;">编写订阅方实现；</span></span>
<span class="line"><span style="color:#E1E4E8;">编辑配置文件；</span></span>
<span class="line"><span style="color:#E1E4E8;">编译；</span></span>
<span class="line"><span style="color:#E1E4E8;">执行。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="前期准备" tabindex="-1">前期准备 <a class="header-anchor" href="#前期准备" aria-label="Permalink to &quot;前期准备&quot;">​</a></h3><ol><li>创建一个工作空间</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ws01_helloworld/src</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>编译工作空间</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ws01_helloworld</span></span>
<span class="line"><span style="color:#B392F0;">colcon</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="3"><li>创建 C++ 功能包</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ws01_hellowrold</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">src</span></span>
<span class="line"><span style="color:#B392F0;">ros2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pkg</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpp01_topic</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--build-type</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ament_cmake</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--dependencies</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rclcpp</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">std_msgs</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">base_interfaces_demo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--node-name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo1_topic_str</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="4"><li>再次编译</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ws01_hellowrold</span></span>
<span class="line"><span style="color:#B392F0;">colcon</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="5"><li>使用集成开发工具打开项目<br></li></ol><blockquote><p>这里使用 CLion 集成开发工具进行编辑</p></blockquote><h3 id="案例一" tabindex="-1">案例一 <a class="header-anchor" href="#案例一" aria-label="Permalink to &quot;案例一&quot;">​</a></h3><blockquote><p>编写话题通信实现，发布方以某个频率发布一段文本，订阅方订阅消息，并输出在终端。<br></p></blockquote><p><strong>1.发布方实现</strong></p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">/*  </span></span>
<span class="line"><span style="color:#6A737D;">  需求：以某个固定频率发送文本“hello world!”，文本后缀编号，每发送一条消息，编号递增1。</span></span>
<span class="line"><span style="color:#6A737D;">  步骤：</span></span>
<span class="line"><span style="color:#6A737D;">    1.包含头文件；</span></span>
<span class="line"><span style="color:#6A737D;">    2.初始化 ROS2 客户端；</span></span>
<span class="line"><span style="color:#6A737D;">    3.定义节点类；</span></span>
<span class="line"><span style="color:#6A737D;">      3-1.创建发布方；</span></span>
<span class="line"><span style="color:#6A737D;">      3-2.创建定时器；</span></span>
<span class="line"><span style="color:#6A737D;">      3-3.组织消息并发布。</span></span>
<span class="line"><span style="color:#6A737D;">    4.调用spin函数，并传入节点对象指针；</span></span>
<span class="line"><span style="color:#6A737D;">    5.释放资源。</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 1.包含头文件；</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rclcpp/rclcpp.hpp&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;std_msgs/msg/string.hpp&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">chrono_literals</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 3.定义节点类；</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MinimalPublisher</span><span style="color:#E1E4E8;"> : </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Node</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">MinimalPublisher</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    : </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;minimal_publisher&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#B392F0;">count_</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#6A737D;">      // 3-1.创建发布方；</span></span>
<span class="line"><span style="color:#E1E4E8;">      publisher_ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">-&gt;create_publisher</span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">std_msgs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">msg</span><span style="color:#E1E4E8;">::String</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;topic&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">      // 3-2.创建定时器；</span></span>
<span class="line"><span style="color:#E1E4E8;">      timer_ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">-&gt;</span><span style="color:#B392F0;">create_wall_timer</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">500</span><span style="color:#F97583;">ms</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">MinimalPublisher</span><span style="color:#E1E4E8;">::timer_callback, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">timer_callback</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#6A737D;">      // 3-3.组织消息并发布。</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">auto</span><span style="color:#E1E4E8;"> message </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std_msgs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">msg</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      message.data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello, world! &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">to_string</span><span style="color:#E1E4E8;">(count_</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">RCLCPP_INFO</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">-&gt;</span><span style="color:#B392F0;">get_logger</span><span style="color:#E1E4E8;">(), </span><span style="color:#9ECBFF;">&quot;发布的消息：&#39;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">&#39;&quot;</span><span style="color:#E1E4E8;">, message.data.</span><span style="color:#B392F0;">c_str</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">      publisher_-&gt;</span><span style="color:#B392F0;">publish</span><span style="color:#E1E4E8;">(message);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">TimerBase</span><span style="color:#E1E4E8;">::SharedPtr timer_;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Publisher</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">std_msgs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">msg</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">&gt;::SharedPtr publisher_;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> count_;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">argc</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">argv</span><span style="color:#E1E4E8;">[])</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#6A737D;">  // 2.初始化 ROS2 客户端；</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">(argc, argv);</span></span>
<span class="line"><span style="color:#6A737D;">  // 4.调用spin函数，并传入节点对象指针。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">spin</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">make_shared</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">MinimalPublisher</span><span style="color:#E1E4E8;">&gt;());</span></span>
<span class="line"><span style="color:#6A737D;">  // 5.释放资源；</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">shutdown</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p><strong>2.订阅方实现</strong></p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">/*  </span></span>
<span class="line"><span style="color:#6A737D;">    需求：订阅发布方发布的消息，并输出到终端。</span></span>
<span class="line"><span style="color:#6A737D;">    步骤：</span></span>
<span class="line"><span style="color:#6A737D;">        1.包含头文件；</span></span>
<span class="line"><span style="color:#6A737D;">        2.初始化 ROS2 客户端；</span></span>
<span class="line"><span style="color:#6A737D;">        3.定义节点类；</span></span>
<span class="line"><span style="color:#6A737D;">            3-1.创建订阅方；</span></span>
<span class="line"><span style="color:#6A737D;">            3-2.处理订阅到的消息。</span></span>
<span class="line"><span style="color:#6A737D;">        4.调用spin函数，并传入节点对象指针；</span></span>
<span class="line"><span style="color:#6A737D;">        5.释放资源。</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 1.包含头文件；</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rclcpp/rclcpp.hpp&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;std_msgs/msg/string.hpp&quot;</span></span>
<span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">placeholders</span><span style="color:#E1E4E8;">::_1;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 3.定义节点类；</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MinimalSubscriber</span><span style="color:#E1E4E8;"> : </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Node</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">MinimalSubscriber</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    : </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;minimal_subscriber&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#6A737D;">      // 3-1.创建订阅方；</span></span>
<span class="line"><span style="color:#E1E4E8;">      subscription_ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">-&gt;create_subscription</span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">std_msgs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">msg</span><span style="color:#E1E4E8;">::String</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;topic&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">MinimalSubscriber</span><span style="color:#E1E4E8;">::topic_callback, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, _1));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private:</span></span>
<span class="line"><span style="color:#6A737D;">    // 3-2.处理订阅到的消息；</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">topic_callback</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std_msgs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">msg</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">msg</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">RCLCPP_INFO</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">-&gt;</span><span style="color:#B392F0;">get_logger</span><span style="color:#E1E4E8;">(), </span><span style="color:#9ECBFF;">&quot;订阅的消息： &#39;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">&#39;&quot;</span><span style="color:#E1E4E8;">, msg.data.</span><span style="color:#B392F0;">c_str</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Subscription</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">std_msgs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">msg</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">&gt;::SharedPtr subscription_;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">argc</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">argv</span><span style="color:#E1E4E8;">[])</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#6A737D;">  // 2.初始化 ROS2 客户端；</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">(argc, argv);</span></span>
<span class="line"><span style="color:#6A737D;">  // 4.调用spin函数，并传入节点对象指针。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">spin</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">make_shared</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">MinimalSubscriber</span><span style="color:#E1E4E8;">&gt;());</span></span>
<span class="line"><span style="color:#6A737D;">  // 5.释放资源；</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">shutdown</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p><strong>3.编辑配置文件</strong><br> 在C++功能包中，配置文件主要关注package.xml与CMakeLists.txt。</p><ol><li>package.xml</li></ol><p>在创建功能包时，所依赖的功能包已经自动配置了，配置内容如下：</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">rclcpp</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">std_msgs</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">base_interfaces_demo</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>需要说明的是<code>&lt;depend&gt;base_interfaces_demo&lt;/depend&gt;</code>在本案例中不是必须的。<br></p><ol start="2"><li>CMakeLists.txt<br> CMakeLists.txt中发布和订阅程序核心配置如下：</li></ol><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">find_package</span><span style="color:#E1E4E8;">(rclcpp REQUIRED)</span></span>
<span class="line"><span style="color:#B392F0;">find_package</span><span style="color:#E1E4E8;">(std_msgs REQUIRED)</span></span>
<span class="line"><span style="color:#B392F0;">find_package</span><span style="color:#E1E4E8;">(base_interfaces_demo REQUIRED)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">add_executable</span><span style="color:#E1E4E8;">(demo01_talker_str src</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">demo01_talker_str.cpp)</span></span>
<span class="line"><span style="color:#B392F0;">ament_target_dependencies</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  demo01_talker_str</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;rclcpp&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;std_msgs&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">add_executable</span><span style="color:#E1E4E8;">(demo02_listener_str src</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">demo02_listener_str.cpp)</span></span>
<span class="line"><span style="color:#B392F0;">ament_target_dependencies</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  demo02_listener_str</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;rclcpp&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;std_msgs&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">install</span><span style="color:#E1E4E8;">(TARGETS </span></span>
<span class="line"><span style="color:#E1E4E8;">  demo01_talker_str</span></span>
<span class="line"><span style="color:#E1E4E8;">  demo02_listener_str</span></span>
<span class="line"><span style="color:#E1E4E8;">  DESTINATION lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">\${PROJECT_NAME})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ol start="4"><li>编译<br> 终端中进入当前工作空间，编译功能包：</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">colcon</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--packages-select</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpp01_topic</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="5"><li>执行<br> 当前工作空间下，启动两个终端，终端1执行发布程序，终端2执行订阅程序。</li></ol><p>终端1输入如下指令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79B8FF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install/setup.bash</span></span>
<span class="line"><span style="color:#B392F0;">ros2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpp01_topic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo01_talker_str</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>终端2输入如下指令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79B8FF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install/setup.bash</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">ros2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpp01_topic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo02_listener_str</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="案例二" tabindex="-1">案例二 <a class="header-anchor" href="#案例二" aria-label="Permalink to &quot;案例二&quot;">​</a></h3><blockquote><p>编写话题通信实现，发布方以某个频率发布自定义接口消息，订阅方订阅消息，并输出在终端。</p></blockquote><h4 id="话题通信自定义接口消息" tabindex="-1">话题通信自定义接口消息 <a class="header-anchor" href="#话题通信自定义接口消息" aria-label="Permalink to &quot;话题通信自定义接口消息&quot;">​</a></h4><p>自定义接口消息的流程与在功能包中编写可执行程序的流程类似，主要步骤如下：</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79B8FF;">1.</span><span style="color:#E1E4E8;"> 创建并编辑 .msg文件；</span></span>
<span class="line"><span style="color:#79B8FF;">2.</span><span style="color:#E1E4E8;"> 编辑配置文件；</span></span>
<span class="line"><span style="color:#79B8FF;">3.</span><span style="color:#E1E4E8;"> 编译；</span></span>
<span class="line"><span style="color:#79B8FF;">4.</span><span style="color:#E1E4E8;"> 测试。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>接下来，我们可以参考案例2编译一个msg文件，该文件中包含学生的姓名、年龄、身高等字段。</p><ol><li><strong>创建并编辑 .msg 文件</strong></li></ol><p>功能包base_interfaces_demo下新建 msg 文件夹，msg文件夹下新建Student.msg文件，文件中输入如下内容：</p><p>string name int32 age float64 height</p><ol start="2"><li><strong>编辑配置文件</strong><br></li></ol><ul><li>package.xml文件 在package.xml中需要添加一些依赖包，具体内容如下：</li></ul><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">build_depend</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">rosidl_default_generators</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">build_depend</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">exec_depend</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">rosidl_default_runtime</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">exec_depend</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">member_of_group</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">rosidl_interface_packages</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">member_of_group</span><span style="color:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>CMakeLists.txt文件</li></ul><p>为了将.msg文件转换成对应的C++和Python代码，还需要在CMakeLists.txt中添加如下配置：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">find_package(rosidl_default_generators</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">REQUIRED</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">rosidl_generate_interfaces($</span><span style="color:#E1E4E8;">{PROJECT_NAME}</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">&quot;msg/Student.msg&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li><strong>编译</strong></li></ol><p>终端中进入当前工作空间，编译功能包：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">colcon</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--packages-select</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">base_interfaces_demo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="4"><li><strong>测试</strong></li></ol><p>编译完成之后，在工作空间下的install目录下将生成Student.msg文件对应的C++和Python文件，我们也可以在终端下进入工作空间，通过如下命令查看文件定义以及编译是否正常：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79B8FF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install/setup.bash</span></span>
<span class="line"><span style="color:#B392F0;">ros2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">show</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">base_interfaces_demo/msg/Student</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>正常情况下，终端将会输出与Student.msg文件一致的内容。</p><h4 id="源码编写" tabindex="-1">源码编写 <a class="header-anchor" href="#源码编写" aria-label="Permalink to &quot;源码编写&quot;">​</a></h4><p><strong>1.发布方实现</strong></p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">/*  </span></span>
<span class="line"><span style="color:#6A737D;">  需求：以某个固定频率发送文本学生信息，包含学生的姓名、年龄、身高等数据。</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 1.包含头文件；</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rclcpp/rclcpp.hpp&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;base_interfaces_demo/msg/student.hpp&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">chrono_literals</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">base_interfaces_demo</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">msg</span><span style="color:#E1E4E8;">::Student;</span></span>
<span class="line"><span style="color:#6A737D;">// 3.定义节点类；</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MinimalPublisher</span><span style="color:#E1E4E8;"> : </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Node</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">MinimalPublisher</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    : </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;student_publisher&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#B392F0;">count_</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#6A737D;">      // 3-1.创建发布方；</span></span>
<span class="line"><span style="color:#E1E4E8;">      publisher_ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">-&gt;create_publisher</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Student</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;topic_stu&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">      // 3-2.创建定时器；</span></span>
<span class="line"><span style="color:#E1E4E8;">      timer_ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">-&gt;</span><span style="color:#B392F0;">create_wall_timer</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">500</span><span style="color:#F97583;">ms</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">MinimalPublisher</span><span style="color:#E1E4E8;">::timer_callback, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">timer_callback</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#6A737D;">      // 3-3.组织消息并发布。</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">auto</span><span style="color:#E1E4E8;"> stu </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Student</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      stu.name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;张三&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      stu.age </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> count_</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      stu.height </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1.65</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">RCLCPP_INFO</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">-&gt;</span><span style="color:#B392F0;">get_logger</span><span style="color:#E1E4E8;">(), </span><span style="color:#9ECBFF;">&quot;学生信息:name=</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">,age=</span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;">,height=</span><span style="color:#79B8FF;">%.2f</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, stu.name.</span><span style="color:#B392F0;">c_str</span><span style="color:#E1E4E8;">(),stu.age,stu.height);</span></span>
<span class="line"><span style="color:#E1E4E8;">      publisher_-&gt;</span><span style="color:#B392F0;">publish</span><span style="color:#E1E4E8;">(stu);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">TimerBase</span><span style="color:#E1E4E8;">::SharedPtr timer_;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Publisher</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Student</span><span style="color:#E1E4E8;">&gt;::SharedPtr publisher_;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> count_;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">argc</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">argv</span><span style="color:#E1E4E8;">[])</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#6A737D;">  // 2.初始化 ROS2 客户端；</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">(argc, argv);</span></span>
<span class="line"><span style="color:#6A737D;">  // 4.调用spin函数，并传入节点对象指针。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">spin</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">make_shared</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">MinimalPublisher</span><span style="color:#E1E4E8;">&gt;());</span></span>
<span class="line"><span style="color:#6A737D;">  // 5.释放资源；</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">shutdown</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><p><strong>2.订阅方实现</strong></p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">/*  </span></span>
<span class="line"><span style="color:#6A737D;">    需求：订阅发布方发布的学生消息，并输出到终端。</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 1.包含头文件；</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rclcpp/rclcpp.hpp&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;base_interfaces_demo/msg/student.hpp&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">placeholders</span><span style="color:#E1E4E8;">::_1;</span></span>
<span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">base_interfaces_demo</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">msg</span><span style="color:#E1E4E8;">::Student;</span></span>
<span class="line"><span style="color:#6A737D;">// 3.定义节点类；</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MinimalSubscriber</span><span style="color:#E1E4E8;"> : </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Node</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">MinimalSubscriber</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    : </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;student_subscriber&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#6A737D;">      // 3-1.创建订阅方；</span></span>
<span class="line"><span style="color:#E1E4E8;">      subscription_ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">-&gt;create_subscription</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Student</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;topic_stu&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">MinimalSubscriber</span><span style="color:#E1E4E8;">::topic_callback, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, _1));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private:</span></span>
<span class="line"><span style="color:#6A737D;">    // 3-2.处理订阅到的消息；</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">topic_callback</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Student</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">msg</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">RCLCPP_INFO</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">-&gt;</span><span style="color:#B392F0;">get_logger</span><span style="color:#E1E4E8;">(), </span><span style="color:#9ECBFF;">&quot;订阅的学生消息：name=</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">,age=</span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;">,height=</span><span style="color:#79B8FF;">%.2f</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, msg.name.</span><span style="color:#B392F0;">c_str</span><span style="color:#E1E4E8;">(),msg.age, msg.height);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Subscription</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Student</span><span style="color:#E1E4E8;">&gt;::SharedPtr subscription_;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">argc</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">argv</span><span style="color:#E1E4E8;">[])</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#6A737D;">  // 2.初始化 ROS2 客户端；</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">(argc, argv);</span></span>
<span class="line"><span style="color:#6A737D;">  // 4.调用spin函数，并传入节点对象指针。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">spin</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">make_shared</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">MinimalSubscriber</span><span style="color:#E1E4E8;">&gt;());</span></span>
<span class="line"><span style="color:#6A737D;">  // 5.释放资源；</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rclcpp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">shutdown</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p><strong>3.编辑配置文件</strong><br> 在C++功能包中，配置文件主要关注package.xml与CMakeLists.txt。</p><ol><li>package.xml</li></ol><p>在创建功能包时，所依赖的功能包已经自动配置了，配置内容如下：</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">rclcpp</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">std_msgs</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">base_interfaces_demo</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">depend</span><span style="color:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>需要说明的是<code>&lt;depend&gt;base_interfaces_demo&lt;/depend&gt;</code>在本案例中不是必须的。<br></p><ol start="2"><li>CMakeLists.txt<br> CMakeLists.txt中发布和订阅程序核心配置如下：</li></ol><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">add_executable</span><span style="color:#E1E4E8;">(demo03_talker_stu src</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">demo03_talker_stu.cpp)</span></span>
<span class="line"><span style="color:#B392F0;">ament_target_dependencies</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  demo03_talker_stu</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;rclcpp&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;std_msgs&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;base_interfaces_demo&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">add_executable</span><span style="color:#E1E4E8;">(demo04_listener_stu src</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">demo04_listener_stu.cpp)</span></span>
<span class="line"><span style="color:#B392F0;">ament_target_dependencies</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  demo04_listener_stu</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;rclcpp&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;std_msgs&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;base_interfaces_demo&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">install</span><span style="color:#E1E4E8;">(TARGETS </span></span>
<span class="line"><span style="color:#E1E4E8;">  demo01_talker_str</span></span>
<span class="line"><span style="color:#E1E4E8;">  demo02_listener_str</span></span>
<span class="line"><span style="color:#E1E4E8;">  demo03_talker_stu</span></span>
<span class="line"><span style="color:#E1E4E8;">  demo04_listener_stu</span></span>
<span class="line"><span style="color:#E1E4E8;">  DESTINATION lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">\${PROJECT_NAME})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ol start="4"><li>编译<br> 终端中进入当前工作空间，编译功能包：</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">colcon</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--packages-select</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpp01_topic</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="5"><li>执行<br> 当前工作空间下，启动两个终端，终端1执行发布程序，终端2执行订阅程序。</li></ol><p>终端1输入如下指令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79B8FF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install/setup.bash</span></span>
<span class="line"><span style="color:#B392F0;">ros2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpp01_topic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo03_talker_stu</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>终端2输入如下指令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79B8FF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install/setup.bash</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">ros2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpp01_topic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo04_listener_stu</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,87);function b(l,u,F,m,d,B){return e(),o("div",null,[n("h1",t,[s(r(l.$frontmatter.title)+" ",1),E]),i,s(" 话题通信的发布方与订阅方是一种多对多的关系，也即，同一话题下可以存在多个发布方，也可以存在多个订阅方，这意味着数据会出现交叉传输的情况，当然如果没有订阅方，数据传输也会出现丢失的情况。 "),y])}const _=p(c,[["render",b]]);export{h as __pageData,_ as default};
