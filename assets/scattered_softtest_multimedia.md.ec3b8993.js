import{_ as e,o as l,c as o,z as a,a as t,t as p,V as s}from"./chunks/framework.055571f3.js";const f=JSON.parse('{"title":"多媒体应用","description":"","frontmatter":{"title":"多媒体应用"},"headers":[],"relativePath":"scattered/softtest/multimedia.md","filePath":"scattered/softtest/multimedia.md","lastUpdated":1683808633000}'),r={name:"scattered/softtest/multimedia.md"},n={id:"frontmatter-title",tabindex:"-1"},c=a("img",{src:"https://gaidocs.oss-cn-hangzhou.aliyuncs.com/emoji/202305101711183.png",width:"46",height:"46",alt:"图片描述",style:{display:"inline","margin-bottom":"-12px"}},null,-1),h=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{$frontmatter.title}} <img src="https://gaidocs.oss-cn-hangzhou.aliyuncs.com/emoji/202305101711183.png" width="46" height="46" alt="图片描述" style="display:inline; margin-bottom: -12px"/>"'},"​",-1),d=s('<h2 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-label="Permalink to &quot;概览&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><img src="https://gaidocs.oss-cn-hangzhou.aliyuncs.com/intenet/202305101716004.png" alt=""></p></div><h2 id="多媒体技术基本概念" tabindex="-1">多媒体技术基本概念 <a class="header-anchor" href="#多媒体技术基本概念" aria-label="Permalink to &quot;多媒体技术基本概念&quot;">​</a></h2><p>多媒体技术是指通过计算机等数字技术对文字、图像、声音、视频等多种媒体形式进行集成或单独处理的技术。</p><h3 id="音频相关概念" tabindex="-1">音频相关概念 <a class="header-anchor" href="#音频相关概念" aria-label="Permalink to &quot;音频相关概念&quot;">​</a></h3><ol><li><p>声音信号：声波在空气中的传播形成的电信号。在数字化处理中，声音信号被A/D转换器采样、量化和编码为数字信号，然后进行数字信号处理。</p></li><li><p>采样率：指每秒钟采集多少次声音信号，并将振动模拟为数值数据，通常使用赫兹（Hz）来表示。对于CD标准的PCM格式来说，采样率为44,100 Hz。</p></li><li><p>比特深度：也称量化位数，定义了用多少比特对每个采样点的幅度进行编码，即描述声音信号的精度，通常以每个样本采样的比特数来表示。例如，CD品质音频的比特深度为16 bits。</p></li><li><p>序列式音频压缩：采用无损或有损压缩方式，将音频文件压缩成较小的文件并尽可能地保留音频质量。如FLAC、APE等。</p></li><li><p>针对单一声道的压缩：针对单一声道的低比特率压缩算法，例如MP3、AAC等。</p></li><li><p>立体声声道：一种表示两个独立的声道信号的方法，通过双声道音频系统输出，使听众感知到立体声效果。</p></li><li><p>音频编辑：对录音后的音频进行编辑和处理的过程，如切割、删除音频片段等。通常使用专业音频编辑软件完成。</p></li><li><p>声码器（codec）：音频编解码器可将现场及录制的声音转化为数字信号再还原为声音信号。常用的音频编解码器有MP3、AAC、WMA等。</p></li></ol><h3 id="图像的相关概念" tabindex="-1">图像的相关概念 <a class="header-anchor" href="#图像的相关概念" aria-label="Permalink to &quot;图像的相关概念&quot;">​</a></h3><p><img src="https://gaidocs.oss-cn-hangzhou.aliyuncs.com/intenet/202305110853751.png" alt=""></p><h3 id="媒体的种类" tabindex="-1">媒体的种类 <a class="header-anchor" href="#媒体的种类" aria-label="Permalink to &quot;媒体的种类&quot;">​</a></h3><p>感觉媒体∶指人们接触信息的感觉形式。如:视觉、听觉、触觉、嗅觉和味觉等。</p><p>表示媒体∶指信息的表示形式。如:文字、图形、图像、动画、音频和视频等。</p><p>显示媒体（表现媒体）︰表现和获取信息的物理设备。如输入显示媒体键盘、鼠标和麦克风等;输出显示媒体显示器、打印机和音箱等</p><p>存储媒体∶存储数据的物理设备，如磁盘、光盘和内存等。</p><p>传输媒体:传输数据的物理载体，如电缆、光缆和交换设备等。</p><h2 id="多媒体相关计算问题" tabindex="-1">多媒体相关计算问题 <a class="header-anchor" href="#多媒体相关计算问题" aria-label="Permalink to &quot;多媒体相关计算问题&quot;">​</a></h2><h3 id="图像容量计算" tabindex="-1">图像容量计算 <a class="header-anchor" href="#图像容量计算" aria-label="Permalink to &quot;图像容量计算&quot;">​</a></h3><p>图像容量是指数字图像所占据的存储空间大小，通常以字节（byte）或比特（bit）作为单位。以下是计算图像容量的基础公式：</p><p>知道像素 + 位数<code>图像容量 = 图像分辨率 x 每个像素所需位数 / 8</code></p><p>知道像素 + 色数<code>图像容量 = 图像分辨率 x log以为2为底色数的对数 / 8 </code></p><p>其中，图像分辨率是指图像中横向和纵向像素的数量，每个像素所需位数则表示每个像素需要使用的色彩深度，即位深。例如，一个8位的灰度图像，每个像素可表示256种灰度级别。</p><details class="details custom-block"><summary>如果一个图像的分辨率为1920×1080，每个像素使用24位（即每个像素RGB各使用8位来表示），那么这张图像所占的存储空间大小就可以用下面的公式计算：</summary><p>图像容量 = 1920 x 1080 x 24 / 8 (1字节=8位)= 6.22 MB</p><p>因此，这张图像所占的存储空间大小为6.22兆字节(MB)。</p></details><h3 id="音频容量计算" tabindex="-1">音频容量计算 <a class="header-anchor" href="#音频容量计算" aria-label="Permalink to &quot;音频容量计算&quot;">​</a></h3><p>音频容量是指数字音频所占据的存储空间大小，通常以字节（byte）或比特（bit）作为单位。以下是计算音频容量的基础公式：</p><p><code>音频容量 = 音频采样率 x 位深 x 声道数 x 时间 / 8</code></p><p>其中，音频采样率是指每秒钟对声音信号进行采样的次数，单位为赫兹(Hz)。位深则表示每个采样点所需使用的位数，例如16位的采样精度可以表示2^16种声音强度级别（即65536级）。声道数表示音频信号中包含的声道数量，通常分为单声道和立体声两种。</p><p>举例来说，如果一个音频文件的采样率为44.1kHz，位深为16位，声道数为2，时长为3分钟，那么这个音频文件的所占的存储空间大小就可以用下面的公式计算：</p><p>音频容量 = 44.1kHz x 16bit x 2 x 180s / 8 (1字节=8位)= 15.66 MB</p><p>因此，这个音频文件所占的存储空间大小为15.66兆字节(MB)。请注意，实际上一些音频压缩格式可以在不损失太多质量下减小音频文件大小，而其背后也包括了许多声学分析和编码压缩理论。</p><h3 id="视频容量计算" tabindex="-1">视频容量计算 <a class="header-anchor" href="#视频容量计算" aria-label="Permalink to &quot;视频容量计算&quot;">​</a></h3><p>视频容量是指数字视频所占据的存储空间大小，通常以字节（byte）或比特（bit）作为单位。以下是计算视频容量的基础公式：</p><p><code>视频容量 = 视频帧数 x 每帧像素数量 x 每个像素所需位数 / 8</code></p><p>其中，视频帧数是指每秒钟播放的视频帧数，每帧像素数量是指视频中每一帧包含的像素数量，每个像素所需位数则表示每个像素需要使用的色彩深度，即位深。例如，一个24位真彩色视频，每个像素可表示2^24种颜色。</p><p>举例来说，如果一个视频的帧率为30帧/秒，帧大小为1920x1080像素，每个像素使用24位（即红、绿、蓝各用8位来表示），那么这个视频所占的存储空间大小就可以用下面的公式计算：</p><p>视频容量 = 30 x 1920 x 1080 x 24 / 8 (1字节=8位)= 18662400 B = 18.7 MB</p><p>因此，这个视频所占的存储空间大小为18.7兆字节(MB)。请注意，同样的压缩技术，如H.264, VP9常应用于将大型视频尽可能压缩到小工件上，而且不会改变太大的画质差异。</p><h2 id="常见多媒体标准" tabindex="-1">常见多媒体标准 <a class="header-anchor" href="#常见多媒体标准" aria-label="Permalink to &quot;常见多媒体标准&quot;">​</a></h2><p>常见的多媒体标准有以下几种：</p><ol><li><p>JPEG：是一种广泛应用于图片压缩领域的标准，具有高压缩比、图像质量可调等特点。</p></li><li><p>PNG：是一种支持透明度和压缩的图片格式，具有无损压缩、透明色以及提供alpha通道等特点。</p></li><li><p>MP3：是一种数字音频格式，可以在不丢失太多声音质量的情况下大幅度压缩文件大小。</p></li><li><p>AAC：是一种高级音频编码格式，支持立体声，比MP3更加高效地压缩文件，通常用于移动设备上播放音乐等任务。</p></li><li><p>H.264：是一种视频压缩标准，具有良好的画面质量和高压缩性能，被广泛应用于手机、电视等低码流场景下的视频编解码。</p></li><li><p>HEVC(H.265)：是一种新一代的视频压缩标准，相较于H.264具有更高的压缩率，在相同的数据流下使得更高画质成为可能。</p></li></ol><p>这些标准都具有自己的特点，如JPEG对于高压缩比和可调图像质量的处理优势显著；而PNG则对于透明度和无损压缩更加出色；而MP3和AAC则在音频领域有着良好的表现，在保证音质同时也可以大幅度减少文件大小。H.264和HEVC则是有代表性的视频压缩格式，广泛应用于网络视频传输，提高了流媒体技术的应用和网络化分发，但也需要相应方案来达到这些目标。</p><p><img src="https://gaidocs.oss-cn-hangzhou.aliyuncs.com/intenet/202305110906183.png" alt=""></p><h2 id="数据压缩技术" tabindex="-1">数据压缩技术 <a class="header-anchor" href="#数据压缩技术" aria-label="Permalink to &quot;数据压缩技术&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>数据压缩技术是指通过各种方式减少信息数据文件的存储空间或传输带宽，从而达到节省存储资源和提高数据传输效率的目的。</p></div><ul><li>空间冗余(几何冗余)</li><li>时间冗余</li><li>视觉冗余</li><li>信息嫡冗余</li><li>结构冗余</li><li>知识冗余</li></ul><p>常见的数据压缩技术有以下几种：</p><ol><li><p>无损压缩：在压缩过程中不会改变原始数据的内容，只是对其进行重新编码，以便更有效地利用已有的位。</p></li><li><p>有损压缩：在压缩过程中会丢失部分原始数据的信息，但在可接受误差的范围内，可以显著地减小文件的大小。</p></li><li><p>字典压缩：将文件中经常出现的短语或词语，通过一一枚举，生成建立一张关键字和替代值的罗列表，用于加速匹配与解压缩时的还原。</p></li><li><p>编码压缩：把数据信息转换成较短的编码，如哈夫曼树等。此方法通常应用于图像、音频、视频等类型数据领域处理</p></li><li><p>分层压缩：将文件分成多个层次，并针对每个层次采用不同的压缩方法，在逐级压缩后使文件尺寸骤减。</p></li></ol><p>这些方法，适合不同的数据领域，也应用于不同的数字媒体类型上。在选择压缩技术时需要考虑到压缩比、压缩/解压速度、质量损失等方面，以便寻找到最适合的方法。</p><h2 id="有损压缩与无损压缩" tabindex="-1">有损压缩与无损压缩 <a class="header-anchor" href="#有损压缩与无损压缩" aria-label="Permalink to &quot;有损压缩与无损压缩&quot;">​</a></h2><p>有损压缩和无损压缩都是常见的数据压缩技术，两者的主要区别在于：</p><ol><li><p><strong>无损压缩</strong>：在压缩过程中不会改变原始数据的内容，只是对其进行重新编码，以便更有效地利用已有的位。解压缩后能够完全还原原始数据。典型的无损压缩算法包括GZIP、Deflate和LZ77等。</p></li><li><p><strong>有损压缩</strong>：在压缩过程中会丢失部分原始数据的信息，但在可接受误差的范围内，可以显著地减小文件的大小。即解压缩后的结果与原始数据有所差异。有损压缩适用于需要高压缩比的情况，如数字媒体（jpeg、mp3等）处理领域。常见的有损压缩算法包括JPEG、MP3、H.264等。</p></li></ol><p><img src="https://gaidocs.oss-cn-hangzhou.aliyuncs.com/intenet/202305110911129.png" alt=""></p>',50);function m(i,u,b,g,x,P){return l(),o("div",null,[a("h1",n,[t(p(i.$frontmatter.title)+" ",1),c,t(),h]),d])}const q=e(r,[["render",m]]);export{f as __pageData,q as default};
