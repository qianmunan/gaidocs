import{_ as e,o as i,c as l,z as t,a as r,t as o,V as c}from"./chunks/framework.055571f3.js";const S=JSON.parse('{"title":"简单复习一下 C++","description":"","frontmatter":{"title":"简单复习一下 C++"},"headers":[],"relativePath":"scattered/dataStruct/cpp.md","filePath":"scattered/dataStruct/cpp.md","lastUpdated":1683808633000}'),s={name:"scattered/dataStruct/cpp.md"},d={id:"frontmatter-title",tabindex:"-1"},n=t("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{$frontmatter.title}}"'},"​",-1),p=c('<div class="tip custom-block"><p class="custom-block-title">说在前面</p><p>最为新手，在学习数据结构之前务必学会一种变成语言，无论是C++、java、python等。这样你才能在实际编写向线性表、栈、队列、二叉树的例子中，才能得心应手。</p><p>对于数据结构中，我们需要了解关于C++以下知识点：</p><ul><li>C++的输入/输出方法</li><li>函数的引用参数传递</li><li>类的定义、类与对象的关系、类与对象的使用</li><li>动态内存分配</li><li>指向对象的指针、对象数组、指向对象的指针数组</li><li>简单类的继承</li><li>理解虚函数</li></ul></div><h2 id="c-简介" tabindex="-1">C++简介 <a class="header-anchor" href="#c-简介" aria-label="Permalink to &quot;C++简介&quot;">​</a></h2><p>C++是一种通用的编程语言，既支持过程性编程（例如C语言那样的结构化编程方式），也支持面向对象编程。</p><p>C++是由Bjarne Stroustrup于1983年在贝尔实验室开发的。他将C语言进行了扩展，增加了一些面向对象的特性，如类、封装、继承、多态等，同时仍保留了C语言的许多特性，如控制流结构、指针操作等。这使得C++成为一门功能丰富而高效的编程语言。基于C++的应用程序广泛应用于计算机软件、网络和游戏开发等领域。</p><p>C++的特点包括：</p><ul><li>面向对象：C++通过类和对象来实现面向对象编程，具有封装、继承和多态等特征。</li><li>性能优秀：C++代码可以直接编译成机器语言执行，因此其运行速度较快。</li><li>功能丰富：C++提供了许多底层操作的特性，如内存管理、指针操作等，使得程序员更容易调优程序并使用系统资源。</li><li>跨平台：由于C++的编译器和库已经被移植到许多不同的操作系统和平台上，因此C++具有较好的可移植性。</li></ul><p>虽然C++具有许多优点，但其使用也需要注意内存管理和错误处理等问题。</p><h2 id="c-的输入输出" tabindex="-1">C++的输入输出 <a class="header-anchor" href="#c-的输入输出" aria-label="Permalink to &quot;C++的输入输出&quot;">​</a></h2><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2>',9);function _(a,h,C,u,m,f){return i(),l("div",null,[t("h1",d,[r(o(a.$frontmatter.title)+" ",1),n]),p])}const k=e(s,[["render",_]]);export{S as __pageData,k as default};
